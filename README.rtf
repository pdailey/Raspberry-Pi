{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red26\green27\blue29;\red183\green0\blue37;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}}
\margl1440\margr1440\vieww12600\viewh14500\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # Initial Setup \
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 // Mount the Disk\
\
\
// Connect\
// check devices on network\
nmap -sn 192.168.0.0/24\
\
//connect to raspberry pi at home. \
 ssh -o StrictHostKeyChecking=no pi@192.168.0.105\
\
// configure the pi\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
sudo raspi-config\
// set password, change locale, change timezone\
\
\
\pard\pardeftab720\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 // Update Applications\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
sudo apt-get update && sudo apt-get --assume-yes dist-upgrade \
sudo apt-get autoremove\
\pard\pardeftab720\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 \
\
\
## Install Vim, Watchdog & Git\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
sudo apt-get --assume-yes install vim watchdog git lsof \
\pard\pardeftab720\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 \
## Setup USB Flash Drive\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
sudo apt-get install hfsplus hfsutils hfsprogs\
// On Mac\
sudo diskutil list\
sudo diskutil disableJournal Drive\
\
// On Pi\
sudo blkid\kerning1\expnd0\expndtw0 \
\
## Install nodered\
// Install essential supporting packages for using bluetooth\
\expnd0\expndtw0\kerning0
sudo apt-get install bluetooth bluez libbluetooth-dev libudev-dev\kerning1\expnd0\expndtw0 \
// install nodejs & npm\
\expnd0\expndtw0\kerning0
curl -sL https://deb.nodesource.com/setup_4.x | sudo bash -\
sudo apt-get --assume-yes install -y build-essential python-dev python-rpi.gpio nodejs\kerning1\expnd0\expndtw0 \
// install node-gyp to eliminate most warnings\
\expnd0\expndtw0\kerning0
sudo npm install -g node-gyp\
// install node-red\kerning1\expnd0\expndtw0 \
\expnd0\expndtw0\kerning0
sudo npm install -g --unsafe-perm  node-red\kerning1\expnd0\expndtw0 \
\
// List globally installed packages\
\expnd0\expndtw0\kerning0
npm list -g --depth=0\kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\
// Backup Pi \
// http://sysmatt.blogspot.com/2014/08/backup-restore-customize-and-clone-your.html\
//Requirements:\expnd0\expndtw0\kerning0
\ul \ulc1 \
\pard\pardeftab720\partightenfactor0
\cf0 apt-get install dosfstools\kerning1\expnd0\expndtw0 \ulnone \
\expnd0\expndtw0\kerning0
\ul apt-get install rsync\
\
\
// Short Verison\
// Install \ulnone Sysmatt's Scripts at http://sysmatt.blogspot.com/2014/08/backup-restore-customize-and-clone-your.html\ul \
// to both archive and extract scripts, modify the tar command to preserve permissions\
\pard\pardeftab720\partightenfactor0
\cf0 \ulnone tar cvpfz\
tar xvpfz\
\
// Making a backup archived\
\pard\pardeftab720\partightenfactor0
\cf0 \ul mkdir -p /home/pi/backups\
sysmatt.rpi.backup.gtar\
\
\
// \ulnone Restoring / Cloning\
\ul dmesg\
\pard\pardeftab720\partightenfactor0
\cf0 \ulnone \
\
\pard\pardeftab720\partightenfactor0
\cf0 \ul \
\
// !! Connect the backup disk AFTER booting\
sudo su\
dmesg\
 // looking for sad or sdb (currently shows up as sdb)\
parted /dev/sdb\
mklabel msdos\
y\
mkpart primary fat16 1MiB 64MB\
mkpart primary ext4 64MB -1s\
print\
quit\
\
mkfs.vfat /dev/sdb1\
mkfs.ext4 -j /dev/sdb2\
\
mkdir /tmp/newpi\
mount /dev/sdb2 /tmp/newpi\
mkdir /tmp/newpi/boot \
mount /dev/sdb1 /tmp/newpi/boot\
df -h\
\
// Added permissions (essential for running BLE scan without root)\
rsync -avp --one-file-system / /boot /tmp/newpi/\
\
umount /tmp/newpi/boot\
umount /tmp/newpi\
\
\
\
\pard\pardeftab720\partightenfactor0
\cf0 \ulnone \
TODO\
// http://www.reactivated.net/writing_udev_rules.html#about\
udev provides out-of-the-box persistent naming for storage devices in the /dev/disk directory. To view the persistent names which have been created for your storage hardware, you can use the following command:\
# ls -lR /dev/disk\
\
When deciding how to name a device and which additional actions to perform, udev reads a series of rules files. These files are kept in the /etc/udev/rules.d directory, and they all must have the .rules suffix.\
Default udev rules are stored in /etc/udev/rules.d/50-udev.rules. You may find it interesting to look over this file - it includes a few examples, and then some default rules proving a devfs-style /dev layout. However, you should not write rules into this file directly.\
Files in /etc/udev/rules.d/ are parsed in lexical order, and in some circumstances, the order in which rules are parsed is important. In general, you want your own rules to be parsed before the defaults, so I suggest you create a file at /etc/udev/rules.d/10-local.rules and write all your rules into this file.\
\
\pard\pardeftab720\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 \
## Clone an SD Image\
// see all mounted devices on computer, pi will have a linux type\
diskutil list\
// unmount the entire disk, not just the partition\
diskutil unmountDisk /dev/disk2\
// create an image. rdisk# is faster than just disk\
sudo dd bs=4m if=/dev/rdisk2 of=/Users/peterdailey/Desktop/rpi-01-09.img\
\
// The created image can now be loaded onto another disk\
diskutil list\
diskutil unmountDisk /dev/disk2\
sudo dd bs=4m if=/Users/peterdailey/Desktop/rpi-01-09.img of=/dev/rdisk2\
\
\
\
\
// Update Applications\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
sudo apt-get update && sudo apt-get dist-upgrade && sudo apt-get autoremove\kerning1\expnd0\expndtw0 \
// Remove Applications\
\expnd0\expndtw0\kerning0
sudo apt-get remove --purge libreoffice*\
sudo apt-get clean && sudo apt-get autoremove\
\pard\pardeftab720\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 // List Installed Applications\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
sudo dpkg -l | more \
// or \
sudo dpkg -l | less\
\pard\pardeftab720\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 // List by date added\
cat /var/log/dpkg.log | grep " install "\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
## Node Red\
// Run Node Red\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
node-red-pi --max-old-space-size=128\kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
// Run Node Red on Startup\
// Use built in systemd capability\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
sudo wget https://raw.githubusercontent.com/node-red/raspbian-deb-package/master/resources/nodered.service -O /lib/systemd/system/nodered.service\
sudo wget https://raw.githubusercontent.com/node-red/raspbian-deb-package/master/resources/node-red-start -O /usr/bin/node-red-start\
sudo wget https://raw.githubusercontent.com/node-red/raspbian-deb-package/master/resources/node-red-stop -O /usr/bin/node-red-stop\
sudo chmod +x /usr/bin/node-red-st*\
sudo systemctl daemon-reload\
\
// To then enable Node-RED to run automatically at every boot and upon crashes\
sudo systemctl enable nodered.service\
\
\
// run the following commands and look for the hidden hints (may need to highlight what looks like blank text)\
pm2 save\
pm2 startup systemd\
\
// visit http://nodered.org/docs/getting-started/running.html for potential error in this step. Will end up searching for file that looks like this.\
sudo find / -type f -name "pm2-init.sh"\kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
// install Light Blue Bean Nodes\
npm install gyp\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
mkdir -p ~/.node-red/node_modules\
npm install --prefix ~/.node-red node-red-contrib-bean\
\pard\pardeftab720\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
// View cvs logs\
cat /usr/lib/node_modules/node-red/TempLightLog.csv \
\
\
## Bluetooth\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
sudo apt-get install bluetooth\
sudo reboot\kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 // Show all connected devices\
lsusb\
// Perform a BLE Scan (make sure there is a device that can be detected nearby)\
\pard\pardeftab720\partightenfactor0
\cf0 sudo hcitool lescan\
\
// Allow non-root users to use BLE\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
sudo usermod -G bluetooth -a <username> 	// replace <username> with actual username\
cat /etc/group | grep bluetooth 	// Check that operation performed successfully (should see: bluetooth:x:111:pi)\kerning1\expnd0\expndtw0 \
sudo reboot\
hcitool lescan\
\
## Cron\
http://www.devils-heaven.com/raspberry-pi-cron-jobs/\
\expnd0\expndtw0\kerning0
// ALWAYS add a line break to your Cron Job\
\pard\pardeftab720\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 \
// View Crontab\
\pard\pardeftab720\parhyphenfactor20\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
crontab -l\kerning1\expnd0\expndtw0  \
\pard\pardeftab720\partightenfactor0
\cf0 // Check if Cron is running \
\pard\pardeftab720\parhyphenfactor20\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
service cron status \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\partightenfactor0
\cf0 \
// Change to directory where cron jobs are stored\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
cd /etc/cron.d\
ls\
\
// Add the following 2 jobs\kerning1\expnd0\expndtw0 \
sudo vim rotateLogs\
// Append the following lines \
59 23 * * * \expnd0\expndtw0\kerning0
pi\kerning1\expnd0\expndtw0  sh /home/pi/Scripts/rotateLogs.sh\
[LINE BREAK]\
\
sudo vim backupToUSB\
@midnight \expnd0\expndtw0\kerning0
root \kerning1\expnd0\expndtw0 rsync -a /home/pi/Logs /media/Drive\
[LINE BREAK]\
\
// remove quotes from a file\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
sed -i \'92s/\\\'94//g\'92 file.txt\kerning1\expnd0\expndtw0 \
\
\
// rotateLogs.sh\
#!/bin/bash\
# Date/Time\
TODAY=`date '+%Y-%m-%d'`;\
\
# Source and Destination directories\
# Note lack of trailing / makes output easier to discern\
src=/usr/lib/node_modules/node-red\
dst=/home/pi/Logs\
\
# Copy files in source directory\
# TODO After testing, change cp to mv\
# TODO Save to USB and /log directory\
for f in $src/*.csv\
do\
        filename=$(basename "$f")\
        extension="$\{filename##*.\}"\
        filename="$\{filename%.*\}"\
\
        out=$filename-$TODAY.$extension\
        # echo "Processing: "$filename""\
        # echo "Renaming and moving to desktop: "$out""\
\
        # Remove double quotes from strings\
        sed -i 's/\\"//g' "$f"\
        # Copy to the destination\
        mv "$f" "$dst"/"$out"\
done\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 ## Commands\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
// make a file executable\
chmod u+x somefile.sh\kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
// Repeat a command in terminal every x seconds\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
you don't have to start running ls -ltr again and again, just use watch -n 5 "ls -ltr" and it will run the command every 5 seconds (or any other value by replacing 5 with what you want)\kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
// Sudo the previous command\
sudo !!\
\
// restart the raspberry pi\
sudo reboot\
\
// Sync folders\
rsync -avz -e ssh pi@192.168.0.104:Logs /Users/peterdailey/Desktop/Logs\
\
// close ssh connection\
exit\
\
// get current time/date\
date\
\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
//ntp won't set the date/time if the current clock is off by more than 1000 seconds.\
sudo ntpd -q -g \
//overrides that restriction.\
\
// halt a program/process\
<CONTROL>-C\
\
// Turn off the PI\
sudo halt -p\
\
\
## POWER SAVING\
// Disable HDMI\
sudo vim /etc/rc.local\
\
// Add the line\
/usr/bin/tvservice -o\
\
## Adding RTC \
// (Pi has Dallas DS3231 I2C RTC chip, but DS1307 commands work and are the standard)\
// Setup I2C\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 sudo apt-get install python-smbus i2c-tools\
\
sudo raspi-config \
> Advanced Options > I2C > Yes, enable and yes load by default\kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 sudo reboot\
\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
sudo i2cdetect -y 1\
// Remove the module blacklist entry so it can be loaded on boot\
sudo sed -i 's/blacklist i2c-bcm2708/#blacklist i2c-bcm2708/' /etc/modprobe.d/raspi-blacklist.conf\
\
// Load the module now\
sudo modprobe i2c-bcm2708\
\
// Notify Linux of the Dallas RTC device\
echo ds1307 0x68 | sudo tee /sys/class/i2c-adapter/i2c-1/new_device\
\
// Test whether Linux can see our RTC module.\
sudo hwclock\
\
// Read the time off the RTC\
sudo hwclock -r\
// Write system time to the RTC\
sudo hwclock -w\
\
// Read from the RTC on Startup\
sudo vim /etc/modules\
//Add the line to end of file: \
rtc-ds1307\
\
// Next\'a0you will need to add\'a0the DS1307 device creation at boot \
sudo vim /etc/rc.local\
// Add the following lines just before exit 0:\
echo ds1307 0x68 > /sys/class/i2c-adapter/i2c-1/new_device\
sudo hwclock -s\
date\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 // To ensure that the NTP-maintained system clock is periodically saved to the hardware RTC to stop it drifting, I have created in /etc/cron.daily a file called hwRTC. This script updates the RTC from the system clock daily.\
\
sudo vim /etc/cron.daily/hwRTC\
\
#!/bin/sh\
/sbin/hwclock --systohc -D --noadjfile --utc > /tmp/hwClock.log 2>&1\
\
sudo chmod 755 /etc/cron.daily/hwRTC\
ls -al hwRTC\
-rwxr-xr-x 1 root root 79 Jun 24 20:17 hwRTC\
\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
\ul \ulc3 \
/// Initial Setup\
\
http://blog.self.li/post/63281257339/raspberry-pi-part-1-basic-setup-without-cables\
\
diskutil list\
diskutil unmountDisk /dev/disk2\
sudo dd bs=64 if=/Users/peterdailey/Desktop/R.img of=/dev/disk2\
\
\
# Pi LEDs\
\pard\pardeftab720\partightenfactor0
\cf0 \ulnone Red PWR LED\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf0 \kerning1\expnd0\expndtw0 - \expnd0\expndtw0\kerning0
on if power OK\
\ls2\ilvl0\kerning1\expnd0\expndtw0 - \expnd0\expndtw0\kerning0
flashes (or goes out) if the power drops below about 4.63V\
\pard\pardeftab720\partightenfactor0
\cf0 Green ACT LED\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf0 \kerning1\expnd0\expndtw0 - \expnd0\expndtw0\kerning0
steady on if no SD card during boot\
\ls3\ilvl0\kerning1\expnd0\expndtw0 - \expnd0\expndtw0\kerning0
irregular flashes for SD card access\
\pard\pardeftab720\partightenfactor0
\cf0 Ethernet Socket Left LED (yellow)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf0 \kerning1\expnd0\expndtw0 - \expnd0\expndtw0\kerning0
on 100-Mbps connection\
\ls4\ilvl0\kerning1\expnd0\expndtw0 - \expnd0\expndtw0\kerning0
off 10-Mbps connection\
\pard\pardeftab720\partightenfactor0
\cf0 Ethernet Socket Right LED (green)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf0 \kerning1\expnd0\expndtw0 - \expnd0\expndtw0\kerning0
on if link established\
\ls5\ilvl0\kerning1\expnd0\expndtw0 - \expnd0\expndtw0\kerning0
flashes for port activity\
\ls5\ilvl0\kerning1\expnd0\expndtw0 - \expnd0\expndtw0\kerning0
off if no link is established\ul \
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
}